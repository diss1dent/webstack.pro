/*--------------------------------

	Rows & Columns

*/

.row {
	@include cf;
	margin-left: n($grid-column-gutter);

	@include mq('tablet') {
		margin-left: n($grid-column-gutter--tablet);
	}

	@include mq('desktop') {
		margin-left: n($grid-column-gutter--desktop);
	}

	&--compact {
		> .column {
			margin-top: $spacing-unit--small;

			@include mq('tablet') {
				margin-top: $spacing-unit;
			}
		}
	}
}

.column {
	@include content-margins;
	position: relative;
	float: left;
	width: 100%;
	margin-top: $grid-column-gutter;
	padding-left: $grid-column-gutter;

	@include mq('tablet') {
		margin-top: $grid-column-gutter--tablet;
		padding-left: $grid-column-gutter--tablet;
	}

	@include mq('desktop') {
		margin-top: $grid-column-gutter--desktop;
		padding-left: $grid-column-gutter--desktop;
	}
}



/*--------------------------------

	Widths, push and pull

*/

@mixin columns($modifier: '') {

	@if $modifier != '' {
		$modifier: #{$modifier};
	}

	@for $i from 1 through $grid-column-count {

		@if $dev-mode {

			.#{$modifier}-#{$i} {
				width: grid-calc($i);
			}

			.#{$modifier}-push-#{$i} {
				left: grid-calc($i);
			}

			.#{$modifier}-pull-#{$i} {
				left: 0 - grid-calc($i);
			}

		} @else {

			@if index( map-deep-get($grid-bp, $modifier, columns, width) , $i) or map-deep-get($grid-bp, $modifier, columns, width) == true {
				.#{$modifier}-#{$i} {
					width: grid-calc($i);
				}
			}

			@if index( map-deep-get($grid-bp, $modifier, columns, push) , $i) or map-deep-get($grid-bp, $modifier, columns, push) == true {
				.#{$modifier}-push-#{$i} {
					left: grid-calc($i);
				}
			}

			@if index( map-deep-get($grid-bp, $modifier, columns, pull) , $i) or map-deep-get($grid-bp, $modifier, columns, pull) == true {
				.#{$modifier}-pull-#{$i} {
					left: 0 - grid-calc($i);
				}
			}

		}

	}

	.#{$modifier}-push-0 {
		left: 0;
	}

}

@include columns('base');

@each $name, $min-width in $breakpoints {

	@include mq($name) {

		@include columns(#{$name});

	}

}
